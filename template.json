{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "prefix": {
        "type": "string",
        "maxLength": 9
      },
      "storageAccountsSku": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS",
          "Standard_ZRS",
          "Premium_LRS",
          "Premium_ZRS",
          "Standard_GZRS",
          "Standard_RAGZRS"
        ]
      },
      "appServicePlanSku": {
        "type": "string",
        "defaultValue": "F1",
        "allowedValues": [
          "F1",
          "D1",
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P1",
          "P2",
          "P3",
          "P1V2",
          "P2V2",
          "P3V2"
        ]
      }
    },
    "variables": {
      "location": "[resourceGroup().location]",
      "keyVaultName": "[concat(parameters('prefix'), '-keyvault')]",
      "storageAccountsName": "[concat(parameters('prefix'), uniqueString(resourceGroup().id))]",
      "secretName": "[concat(variables('storageAccountsName'), '-connstr')]",
      "appServicePlanName": "[concat(parameters('prefix'), '-plan')]",
      "functionName": "[concat(parameters('prefix'), '-func')]",
      "applicationInsightsName": "[concat(parameters('prefix'), '-insights')]"
    },
    "resources": [
      // Create a Storage
      {
        "name": "[variables('storageAccountsName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-04-01",
        "location": "[variables('location')]",
        "sku": {
          "name": "[parameters('storageAccountsSku')]"
        }
      },
      // Create a Functions and related resources
      {
          "name": "[variables('appServicePlanName')]",
          "type": "Microsoft.Web/serverfarms",
          "apiVersion": "2019-08-01",
          "location": "[variables('location')]",
          "sku": {
              "name": "[parameters('appServicePlanSku')]"
          },
          "properties": {
              "name": "[variables('appServicePlanName')]"
          }
      },
      {
        "name": "[variables('applicationInsightsName')]",
        "type": "Microsoft.Insights/components",
        "apiVersion": "2015-05-01",
        "location": "[variables('location')]",
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('functionName')))]": "Resource"
        },
        "kind": "web",
        "properties": {
          "Application_Type": "web",
          "ApplicationId": "[variables('functionName')]"
        }
      },
      {
        "name": "[variables('functionName')]",
        "type": "Microsoft.Web/sites",
        "apiVersion": "2019-08-01",
        "location": "[variables('location')]",
        "kind": "functionapp",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
          "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
        ],
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
        },
        "identity": {
          "type": "SystemAssigned"
        }
      },
      // Create a Key Vault
      {
        "name": "[variables('keyVaultName')]",
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2018-02-14",
        "location": "[variables('location')]",
        "properties": {
          "tenantId": "[subscription().tenantId]",
          "sku": {
            "name": "standard",
            "family": "A"
          },
          "accessPolicies": [
            // Add an access policy for the Functions to Key Vault
            {
              "tenantId": "[reference(resourceId('Microsoft.Web/sites', variables('functionName')), '2019-08-01', 'Full').identity.tenantId]",
              "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('functionName')), '2019-08-01', 'Full').identity.principalId]",
              "permissions": {
                "secrets": [
                  "get",
                  "list"
                ]
              }
            }
          ]
        },
        "resources": [
          // Add the connection string of Storage as a secret to Key Vault
          {
            "name": "[variables('secretName')]",
            "type": "secrets",
            "apiVersion": "2018-02-14",
            "properties": {
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountsName'), ';AccountKey=', listKeys(variables('storageAccountsName'), '2019-04-01').keys[0].value)]"
            },
            "dependsOn": [
              "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ]
          }
        ],
        "dependsOn": [
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountsName'))]",
          "[resourceId('Microsoft.Web/sites', variables('functionName'))]"
        ]
      },
      // Add appliction settings from Key Vault Secret
      {
        "name": "[concat(variables('functionName'), '/appsettings')]",
        "type": "Microsoft.Web/sites/config",
        "apiVersion": "2019-08-01",
        "properties": {
          "AzureWebJobsDashboard": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('secretName'))).secretUriWithVersion, ')')]",
          "AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('secretName'))).secretUriWithVersion, ')')]",
          "FUNCTIONS_EXTENSION_VERSION": "~2",
          "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]",
          "FUNCTIONS_WORKER_RUNTIME": "node",
          "WEBSITE_NODE_DEFAULT_VERSION": "12.13.0"
        },
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
          "[resourceId('Microsoft.Web/sites', variables('functionName'))]"
        ]
      }
    ],
    "outputs": {}
}